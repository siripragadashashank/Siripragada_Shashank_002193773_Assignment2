/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DateFormatter;
import javax.swing.text.DefaultFormatterFactory;
import model.car;
import model.carFleet;

/**
 *
 * @author sirip
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    
    carFleet fleet;
    
    
    public ViewJPanel(carFleet fleet) {
        initComponents();
        
        fleet.createSampleFleet();
        this.fleet = fleet;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFleet = new javax.swing.JTable();
        bntView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        checkboxAvailability = new javax.swing.JCheckBox();
        lblManufacturer = new javax.swing.JLabel();
        txtManufacturer = new javax.swing.JTextField();
        lblManfyear = new javax.swing.JLabel();
        txtManfyear = new javax.swing.JTextField();
        lblNseats = new javax.swing.JLabel();
        txtNseats = new javax.swing.JTextField();
        lblSerialno = new javax.swing.JLabel();
        lblModelno = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        lblExpired = new javax.swing.JLabel();
        checkboxExpired = new javax.swing.JCheckBox();
        lblAvailability = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        txtEta = new javax.swing.JTextField();
        lblEta = new javax.swing.JLabel();
        txtModelno = new javax.swing.JTextField();
        txtSerialno = new javax.swing.JTextField();
        lblLastUpdated = new javax.swing.JLabel();
        fmtFieldLastUpdated = new javax.swing.JFormattedTextField();

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View Car Fleet");

        tblFleet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Manufacturer", "Availability", "Manufactured Year", "Number of Seats", "Serial Number", "Model Number", "City", "Expired License Certificate", "ETA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFleet);

        bntView.setText("View");
        bntView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblManufacturer.setText("Manufacturer:");

        lblManfyear.setText("Manufactured Year:");

        lblNseats.setText("Number of Seats:");

        lblSerialno.setText("Serial Number:");

        lblModelno.setText("Model Number:");

        lblCity.setText("City:");

        lblExpired.setText("Expired Maintenance Certificate:");

        lblAvailability.setText("Availability:");

        btnUpdate.setText("Update Car Data");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblEta.setText("ETA:");

        lblLastUpdated.setText("Fleet Last Updated on:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSerialno)
                            .addComponent(lblCity))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCity, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                            .addComponent(txtSerialno))
                        .addGap(61, 61, 61)
                        .addComponent(lblModelno)
                        .addGap(18, 18, 18)
                        .addComponent(txtModelno, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAvailability)
                            .addComponent(lblManufacturer))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxAvailability)
                            .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblManfyear)
                                    .addComponent(lblNseats))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtNseats)
                                    .addComponent(txtManfyear, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblExpired)
                                .addGap(18, 18, 18)
                                .addComponent(checkboxExpired)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblEta)
                .addGap(18, 18, 18)
                .addComponent(txtEta, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(427, 427, 427))
            .addGroup(layout.createSequentialGroup()
                .addGap(366, 366, 366)
                .addComponent(btnUpdate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblLastUpdated)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fmtFieldLastUpdated, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bntView, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete)
                .addGap(89, 89, 89))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntView)
                    .addComponent(btnDelete)
                    .addComponent(lblLastUpdated)
                    .addComponent(fmtFieldLastUpdated, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManufacturer)
                    .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManfyear)
                    .addComponent(txtManfyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(checkboxAvailability, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNseats)
                        .addComponent(txtNseats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSerialno)
                        .addComponent(txtSerialno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblModelno)
                        .addComponent(txtModelno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCity))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(checkboxExpired)
                        .addComponent(lblExpired, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblEta)
                        .addComponent(txtEta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btnUpdate)
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblFleet.getSelectedRow();
        
        if (selectedRowIndex < 0 ){
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblFleet.getModel();
        car selectedCar = (car) model.getValueAt(selectedRowIndex, 0);
        
        fleet.deleteCar(selectedCar);
        JOptionPane.showMessageDialog(this, "selected Car Data deleted.");
        
        Date now = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String datestring = formatter.format(now);
        
        populateTable();
        
        fmtFieldLastUpdated.setText(datestring);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void bntViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblFleet.getSelectedRow();
           
        if (selectedRowIndex < 0 ){
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblFleet.getModel();
        car selectedCar = (car) model.getValueAt(selectedRowIndex, 0);
        
        txtManufacturer.setText(selectedCar.getManufacturer());
        checkboxAvailability.setSelected(selectedCar.isAvailability());
        txtManfyear.setText(selectedCar.getManfyear());
        txtNseats.setText(String.valueOf(selectedCar.getNseats()));
        txtSerialno.setText(selectedCar.getSerialno());
        txtModelno.setText(selectedCar.getModelno());
        txtCity.setText(selectedCar.getCity());
        checkboxExpired.setSelected(selectedCar.isExpired());
        txtEta.setText(String.valueOf(selectedCar.getEta()));
  
    }//GEN-LAST:event_bntViewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        int selectedRowIndex = tblFleet.getSelectedRow();
        
        if (selectedRowIndex < 0 ){
            JOptionPane.showMessageDialog(this, "Please select a row to update.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblFleet.getModel();
        
        car c = (car) model.getValueAt(selectedRowIndex, 0);
        
        String manufacturer = txtManufacturer.getText();
        boolean availability = checkboxAvailability.isSelected();
        String manfyear = txtManfyear.getText();
        int nseats = Integer.parseInt(txtNseats.getText());
        String serialno = txtSerialno.getText();
        String modelno = txtModelno.getText();
        String city = txtCity.getText();
        boolean expired = checkboxExpired.isSelected();
        int eta = Integer.parseInt(txtEta.getText());
          
        c.setManufacturer(manufacturer);
        c.setAvailability(checkboxAvailability.isSelected());
        c.setManfyear(manfyear);
        c.setNseats(nseats);
        c.setSerialno(serialno);
        c.setModelno(modelno);
        c.setCity(city);
        c.setExpired(checkboxExpired.isSelected());
        c.setEta(eta);     
                
        model.setValueAt(c, selectedRowIndex, 0);
        model.setValueAt(c.isAvailability(), selectedRowIndex, 1);
        model.setValueAt(c.getManfyear(), selectedRowIndex, 2);
        model.setValueAt(c.getNseats(), selectedRowIndex, 3);
        model.setValueAt(c.getSerialno(), selectedRowIndex, 4);
        model.setValueAt(c.getModelno(), selectedRowIndex, 5);
        model.setValueAt(c.getCity(), selectedRowIndex, 6);
        model.setValueAt(c.isExpired(), selectedRowIndex, 7);
        model.setValueAt(c.getEta(), selectedRowIndex, 8);
        
        
        Date now = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String datestring = formatter.format(now);        
        
        JOptionPane.showMessageDialog(this, "Car data updated successfully.");
        fmtFieldLastUpdated.setText(datestring);
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntView;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox checkboxAvailability;
    private javax.swing.JCheckBox checkboxExpired;
    private javax.swing.JFormattedTextField fmtFieldLastUpdated;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAvailability;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblEta;
    private javax.swing.JLabel lblExpired;
    private javax.swing.JLabel lblLastUpdated;
    private javax.swing.JLabel lblManfyear;
    private javax.swing.JLabel lblManufacturer;
    private javax.swing.JLabel lblModelno;
    private javax.swing.JLabel lblNseats;
    private javax.swing.JLabel lblSerialno;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblFleet;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtEta;
    private javax.swing.JTextField txtManfyear;
    private javax.swing.JTextField txtManufacturer;
    private javax.swing.JTextField txtModelno;
    private javax.swing.JTextField txtNseats;
    private javax.swing.JTextField txtSerialno;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) tblFleet.getModel();
        model.setRowCount(0);
        
        
        for (car c : fleet.getFleet()){
            Object[] row = new Object[9];
            
            row[0] = c;
            row[1] = c.isAvailability();
            row[2] = c.getManfyear();
            row[3] = c.getNseats();
            row[4] = c.getSerialno();
            row[5] = c.getModelno();
            row[6] = c.getCity();
            row[7] = c.isExpired();
            row[8] = c.getEta();
            model.addRow(row);
            
        }
        Date now = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String datestring = formatter.format(now);
        fmtFieldLastUpdated.setText(datestring);
        fleet.setLastUpdatedDate(now);

    }
}
