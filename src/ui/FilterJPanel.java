/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import model.car;
import model.carFleet;
import java.util.stream.Collectors;
import javax.swing.JComboBox;

/**
 *
 * @author sirip
 */
public class FilterJPanel extends javax.swing.JPanel {

    /**
     * Creates new form FilterJPanel
     */
    carFleet fleet;
    public FilterJPanel(carFleet fleet) {
        initComponents();
        
        this.fleet = fleet;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblFleet = new javax.swing.JTable();
        lblFilterTitle = new javax.swing.JLabel();
        btnFirstAvailable = new javax.swing.JButton();
        txtNumAvailable = new javax.swing.JTextField();
        cmbAvailabilityStatus = new javax.swing.JComboBox<>();
        lblAvailStatus = new javax.swing.JLabel();
        lblStatusNum = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1201, 567));

        tblFleet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Manufacturer", "Availability", "Manufactured Year", "Number of Seats", "Serial Number", "Model Number", "City", "Expired Lic. Certificate", "ETA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFleet.setShowGrid(false);
        tblFleet.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblFleet);

        lblFilterTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFilterTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFilterTitle.setText("Filtered Car Fleet");

        btnFirstAvailable.setText("First Available Car");
        btnFirstAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstAvailableActionPerformed(evt);
            }
        });

        cmbAvailabilityStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Unavailable" }));
        cmbAvailabilityStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAvailabilityStatusActionPerformed(evt);
            }
        });

        lblAvailStatus.setText("Stauts of the Cars");

        lblStatusNum.setText("Num");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFilterTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 1201, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbAvailabilityStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(txtNumAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnFirstAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAvailStatus)
                                .addGap(31, 31, 31)
                                .addComponent(lblStatusNum)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblFilterTitle)
                .addGap(46, 46, 46)
                .addComponent(btnFirstAvailable)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvailStatus)
                    .addComponent(lblStatusNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbAvailabilityStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(166, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    
    private void btnFirstAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstAvailableActionPerformed
        // TODO add your handling code here:
        
        ArrayList tempFleet = new ArrayList<car>();

        tempFleet.clear();
        for (car c:fleet.getFleet()){            
            tempFleet.add(c);
        }
        Collections.sort(tempFleet);
        
        populateSelectedTable(tempFleet, 1);
    }//GEN-LAST:event_btnFirstAvailableActionPerformed

    private void cmbAvailabilityStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAvailabilityStatusActionPerformed
        // TODO add your handling code here:
        String selectedValue = cmbAvailabilityStatus.getSelectedItem().toString();
        ArrayList tempFleetAvail = new ArrayList<car>();
        ArrayList tempFleetUnavail = new ArrayList<car>();
        
        tempFleetAvail.clear();
        tempFleetUnavail.clear();
        
        for (car c:fleet.getFleet()){
            if (c.isAvailability()){
                tempFleetAvail.add(c);
            }
            else{
                tempFleetUnavail.add(c);
            }
        }
        
        if ("Available".equals(selectedValue)){   
            txtNumAvailable.setText(String.valueOf(tempFleetAvail.size()));
            populateSelectedTable(tempFleetAvail, tempFleetAvail.size());
        }
        else{
            txtNumAvailable.setText(String.valueOf(tempFleetUnavail.size()));
            populateSelectedTable(tempFleetUnavail, tempFleetUnavail.size());
        }
        
        
    }//GEN-LAST:event_cmbAvailabilityStatusActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirstAvailable;
    private javax.swing.JComboBox<String> cmbAvailabilityStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAvailStatus;
    private javax.swing.JLabel lblFilterTitle;
    private javax.swing.JLabel lblStatusNum;
    private javax.swing.JTable tblFleet;
    private javax.swing.JTextField txtNumAvailable;
    // End of variables declaration//GEN-END:variables

    private void populateSelectedTable(ArrayList<car> selectedFleet, int limit) {
        
        DefaultTableModel model = (DefaultTableModel) tblFleet.getModel();
        model.setRowCount(0);
        int i = 0;  
        
        for (car c : selectedFleet){
            if (i >= limit){
                break;
            }            
            Object[] row = new Object[9];
            
            row[0] = c;
            row[1] = c.isAvailability();
            row[2] = c.getManfyear();
            row[3] = c.getNseats();
            row[4] = c.getSerialno();
            row[5] = c.getModelno();
            row[6] = c.getCity();
            row[7] = c.isExpired();
            row[8] = c.getEta();
            model.addRow(row);
            i++;
        }
    }
    
}
